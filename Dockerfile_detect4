ARG RUST_VERSION=1.87.0
ARG APP_NAME=detect4

FROM rust:${RUST_VERSION}-alpine AS build
ARG APP_NAME
WORKDIR /app

# Install host build dependencies.
RUN apk add --no-cache clang lld musl-dev git python3

RUN --mount=type=bind,source=cmd,target=cmd \
    --mount=type=bind,source=crates,target=crates \
	--mount=type=bind,source=models,target=models \
	--mount=type=bind,source=export,target=export \
    --mount=type=bind,source=Cargo.toml,target=Cargo.toml \
    --mount=type=bind,source=Cargo.lock,target=Cargo.lock \
    --mount=type=cache,target=/app/target/ \
    --mount=type=cache,target=/usr/local/cargo/git/db \
    --mount=type=cache,target=/usr/local/cargo/registry/ \
cargo build --bin $APP_NAME --locked --release  && \
cp ./target/release/$APP_NAME /bin/$APP_NAME && \
cp ./export/in.wav /in.wav 

FROM alpine:3.22 AS final
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser
USER appuser

# Copy the executable from the "build" stage.
COPY --from=build /bin/detect4 /bin/detect4
COPY --from=build /in.wav ./in.wav

# What the container should run when it is started.
CMD ["/bin/detect4", "./in.wav"]
